{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Change","props","Childrens","AccCollapse","change","children","length","Accordion","Toggle","as","Button","variant","eventKey","Collapse","Card","Body","map","idx","console","log","className","Header","Badge","type","name","line","href","link","size","color","changed_lines","total_lines","Locust_entry","entry","file","file_url","changes","PullHeader","Table","striped","bordered","hover","initial","terminal","lines_changed","files_changed","App","data","locust","refs","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.794f9f12.chunk.js","sourcesContent":["import data from './locust.json'\n\nimport React from 'react'\nimport Accordion from 'react-bootstrap/Accordion'\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\nimport Table from 'react-bootstrap/Table'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Badge from 'react-bootstrap/Badge'\nimport './App.css';\n\n// class PullRequest extends React.Component\n// {\n//   constructor(props)\n//   {\n//     super(props)\n//     this.state = {\n//       refs: '',\n//       Locust\n\n//     }\n//   }\n// }\n\nfunction ChangeChildren(props)\n{\n  return (\n    <div className=\"ChangeChild\">\nx\n    </div>\n  )\n}\n\nfunction Change(props)\n{\n  var Childrens\n  var AccCollapse\n    if (props.change.children.length > 0)\n    {\n      Childrens = () => (\n        <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n        Children: {props.change.children.length} {' '}\n        </Accordion.Toggle>\n      )\n      AccCollapse = () => (\n        <Accordion.Collapse eventKey=\"0\">\n          <Card.Body>\n            {\n              props.change.children.map((children, idx) => {\n                return (\n                    <Change key={idx} change={children}/>\n                )})\n            }\n          </Card.Body>\n        </Accordion.Collapse>\n      )\n    }\n    else\n    {\n      Childrens = () => \"Children: None\"\n      AccCollapse = () => \"\"\n    }\n\n\n    console.log(Childrens)\n\n    var type\n\n  return (\n    <div className=\"Change\">\n      <Accordion>\n<Card>\n  <Card.Header>\n       <Badge variant=\"primary\">{props.change.type}</Badge> {\" \"}\n       <Badge variant=\"secondary\">{props.change.name}</Badge>{\" \"}\n       <Badge variant=\"info\">#{props.change.line} {\" \"}</Badge>{\" \"}\n       <Button href={props.change.link} size=\"sm\" color=\"black\">Show</Button> <br/>\n      Changed Lines: {props.change.changed_lines} {\" \"}\n      Total Lines: {props.change.total_lines} <br/>\n      <Childrens/>\n  </Card.Header>\n      <AccCollapse/>\n      </Card>\n    </Accordion>\n      {/* <Accordion><Card><Card.Header>\n\n      <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n      type: {props.change.type} name: {props.change.name} {\">\"} #{props.change.line} <br/>\n      Changed Lines: {props.change.changed_lines} {\" \"}\n      Total Lines: {props.change.total_lines}\n      </Accordion.Toggle></Card.Header></Card>\n      <Accordion.Collapse eventKey=\"0\">\n        {/* <Change key={idx} change={change}/>\n      </Accordion.Collapse>\n\n      </Accordion> */}\n    </div>\n  )\n}\n\n// function Changes(props)\n// {\n//   return (\n//     <div className=\"Changes\">\n//       {props.changes.map((change, idx) => {\n//           return (\n//               <Change key={idx} change={change}/>\n//           )})}\n//     </div>\n//   )\n// }\n\n// function File(props)\n// {\n//     return (\n//       <div className=\"File\">\n\n//         {props.file.map((changes, idx) => {\n//           return (\n//               <Changes key={idx} changes={changes}/>\n//           )})}\n//       </div>\n//     )\n// }\n\nfunction Locust_entry(props)\n{\n    return (\n      <div className=\"File\">\n\n          File: {' '} {props.entry.file} {' '}\n          <Button href={props.entry.file_url} size=\"sm\">Open File</Button> <br/>\n          {' '}\n\n\n        {props.entry.changes.map((change, idx) => {\n          return (\n              <Change key={idx} change={change}/>\n          )})}\n      </div>\n    )\n}\n\nfunction PullHeader(props)\n{\n  return (\n    <div className=\"SummaryTable\">\n      <Table striped bordered hover>\n      <tbody>\n        <tr>\n          <td>Initial</td>\n          <td>{props.initial}</td>\n        </tr>\n        <tr>\n          <td>Terminal</td>\n          <td>{props.terminal}</td>\n        </tr>\n        <tr>\n          <td>Total changed lines</td>\n          <td>{props.lines_changed}</td>\n        </tr>\n        <tr>\n          <td>Files changed</td>\n          <td>{props.files_changed}</td>\n        </tr>\n      </tbody>\n    </Table>\n  </div>\n  )\n}\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n\n\n<Accordion>\n<Card>\n  <Card.Header>\n    <PullHeader files_changed={data.locust.length}\n                      initial={data.refs.initial}\n                      terminal={data.refs.terminal}\n                      lines_changed='ToDo'/>\n    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n      Detail\n    </Accordion.Toggle>\n  </Card.Header>\n  <Accordion.Collapse eventKey=\"0\">\n    <Card.Body>\n    {\n               data.locust.map((entry, idx) => {\n                return (\n                    <Locust_entry key={idx} entry={entry}/>\n                )})\n            }\n    </Card.Body>\n        </Accordion.Collapse>\n      </Card>\n\n    </Accordion>\n\n\n\n\n\n    </div>\n  );\n}\n\nexport default App;\n{/* <Accordion>\n<Card>\n  <Card.Header>\n    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n      Press to expand\n    </Accordion.Toggle>\n  </Card.Header>\n  <Accordion.Collapse eventKey=\"0\">\n    <Card.Body>\n    </Card.Body>\n        </Accordion.Collapse>\n      </Card>\n      <Card>\n        <Card.Header>\n          <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\n            Click me!\n          </Accordion.Toggle>\n        </Card.Header>\n        <Accordion.Collapse eventKey=\"1\">\n          <Card.Body>Hello! I'm another body</Card.Body>\n        </Accordion.Collapse>\n      </Card>\n    </Accordion> */}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}