{"version":3,"sources":["Content.js","Codewidget.js","App.js","index.js"],"names":["columns","name","label","options","filter","sort","filterType","tableOptions","selectableRowsOnClick","selectableRowsHideCheckboxes","denseTable","rowsPerPage","rowsPerPageOptions","fixedHeader","xAxis","yAxis","selectToolbarPlacement","rowHover","setTableProps","padding","size","LocustSummaryTable","React","Component","props","console","log","arr","allRowsSelected","length","map","RowSelected","idx","push","dataIndex","this","setState","CurrentRow","currentRowsSelected","RowsSelected","SelectionChangesCallback","className","title","data","Changes","onRowSelectionChange","SelectionChangedCallback","CodeWidget","state","Change","Visible","show","key","id","close","bind","src","src_x","link","slice","indexOf","endline","parseInt","total_lines","line","postscribe","PullHeader","Table","striped","bordered","hover","initial","terminal","lines_changed","files_changed","App","RowxSelected","SetSelectedRows","renderControls","renderCodeWindow","removeSelection","locust","entry","file","changes","change","getchange","children","ratio","changed_lines","obj","File","Ratio","toFixed","index","idx_to_remove","ActiveRow","splice","RowsSelectedIdxs","Card","Header","refs","x","Button","onClick","color","split","minSize","initialSize","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.014f1b7d.chunk.js","sourcesContent":["import React from 'react'\nimport MUIDataTable, { TableFilterList } from \"mui-datatables\";\n\n// const handleRowClick = (rowData, rowMeta) => {\n//     console.log(rowData, rowMeta);\n// };\n\nconst columns = [\n    {\n        name: \"name\",\n        label: \"Name\",\n        options:\n        {\n         filter: true,\n         sort: true,\n         filterType: 'multiselect'\n        }\n    },\n    {\n        name: \"File\",\n        label: \"File\",\n        options:\n        {\n         filter: true,\n         sort: true,\n         filterType: 'multiselect'\n        }\n    },\n    {\n        name: \"type\",\n        label: \"type\",\n        options:\n        {\n         filter: true,\n         sort: true,\n         filterType: 'checkbox'\n        }\n    },\n    {\n        name: \"line\",\n        label: \"#\",\n        options:\n        {\n         filter: false,\n         sort: true,\n        }\n    },\n    {\n        name: \"changed_lines\",\n        label: \"changed\",\n        options:\n        {\n         filter: true,\n         sort: true,\n        }\n    },\n    {\n        name: \"total_lines\",\n        label: \"total\",\n        options:\n        {\n         filter: false,\n         sort: true,\n        }\n    },\n    {\n        name: \"Ratio\",\n        label: \"Ratio\",\n        options:\n        {\n         filter: false,\n         sort: true,\n        }\n    }\n\n    ];\n\n\n    var tableOptions = {\n\n        // selectableRows: 'multiple',\n        selectableRowsOnClick: true,\n        selectableRowsHideCheckboxes: true,\n        denseTable: true,\n        rowsPerPage: 50,\n        rowsPerPageOptions: [50, 500, 1000],\n        fixedHeader: {\n          xAxis: true,\n          yAxis: true\n        },\n        selectToolbarPlacement:\"none\",\n        rowHover : true,\n\n        setTableProps: () => (\n            {\n            padding: 'none',\n              size:'small'\n            }\n          ),\n\n    }\n\n\nclass DataEntry extends React.Component {\n    constructor(props)\n    {\n        super(props)\n        this.state=\n        {\n            FileName: props.FileName,\n            Type: props.Type,\n            LinesTotal: props.LinesTotal\n        }\n    }\n}\nclass LocustSummaryTable extends React.Component\n{\n    constructor(props)\n    {\n    super(props)\n\n\n    // console.log(props.data)\n    }\n\n\n    SelectionChangedCallback(props)\n    {\n        console.log('SelectionChangedCallback..',props)\n\n        let arr = []\n        if ( props.allRowsSelected.length > 0)\n        {\n            props.allRowsSelected.map((RowSelected, idx) => {\n                arr.push(RowSelected.dataIndex)\n            })\n        }\n        else\n        {\n\n            arr = []\n        }\n\n        this.setState(\n            {\n                CurrentRow: props.currentRowsSelected,\n                RowsSelected: props.allRowsSelected\n            })\n        // console.log('SelectionChangedCallback:',arr)\n        if(arr)\n        {\n\n        }\n\n        // let ChangeList = this.state.changes\n        // this.props.SelectionChanges({arr,ChangeList})\n\n        let RowsSelected = props.allRowsSelected\n        this.props.SelectionChangesCallback({RowsSelected})\n\n\n\n    }\n\n\n    render()\n    {\n\n        console.log('LocustSummaryTable.render()...')\n\n\n        return (\n            <div className=\"SummaryTable\">\n                <MUIDataTable\n            key={\"MUIDataTable\"}\n            title={\"Changes\"}\n            data={this.props.Changes}\n            columns={columns}\n            options={{...tableOptions,\n                onRowSelectionChange:(currentRowsSelected, allRowsSelected) =>\n                {\n                    this.SelectionChangedCallback({currentRowsSelected,allRowsSelected})\n                },\n                \n            }}\n\n            />\n            </div>\n        )\n    }\n\n} export default LocustSummaryTable","import React from 'react'\nimport postscribe from 'postscribe';\nimport './App.css';\nimport Button from 'react-bootstrap/Button'\nimport Card from 'react-bootstrap/Card'\nclass CodeWidget extends React.Component\n{\n\n  constructor(props)\n  {\n    super(props)\n    console.log('CodeWidget constructor...')\n\n    this.state =\n    {\n      Change: props.Change,\n      Visible: props.show,\n      key: props.id\n    }\n\n    this.close = this.close.bind(this)\n\n  }\n\n  SetWindows(props)\n  {\n\n      console.log('CodeWidget.SetWindows..')\n  }\n  componentDidMount()\n  {\n    console.log('CodeWidget.ComponentDidMount()...')\n    if(this.state.Visible)\n        {\n            // http://gist-it.appspot.com/github/ADI10HERO/Hub/blob/6b69eb6/hub/collections/dataset/core.py?slice=559:565;footer=no\n            let src='http://gist-it.appspot.com/'\n            let src_x = this.state.Change.link.slice(0,this.state.Change.link.indexOf('#'))\n            let endline = parseInt(this.state.Change.total_lines) + parseInt(this.state.Change.line)\n            let startline = parseInt(this.state.Change.line)-1\n            let slice = '?slice='+startline+':'+(endline)\n            let nofoter = 'footer=no'\n            src = '<script src='+src+src_x+slice+';'+nofoter+'></script>'\n            // console.log(src)\n            console.log('key:',this.state.key)\n            let id=\"#Code\"+this.state.key\n            postscribe(id,src)\n        }\n    }\n\n    close()\n    {\n        this.setState({Visible:false})\n        console.log(\"CodeWidget.close\")\n        // this.componentWillUnmount\n    }\n\n  render() {\n\n    let id = ''\n        id=\"Code\"+this.state.key\n\n    if(this.state.Visible)\n    {\n        return (\n            <div className=\"CodeWidget\">\n\n\n\n                {/* <button onClick={console.log('clicked'), this.close}>Close</button> */}\n                <div id={id}></div>\n            </div>\n\n            )\n    }\n    else\n    return('')\n\n  }\n} export default CodeWidget","import data from './locust.json'\nimport './Content.js'\n\nimport React from 'react'\nimport Accordion from 'react-bootstrap/Accordion'\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\nimport Table from 'react-bootstrap/Table'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Badge from 'react-bootstrap/Badge'\nimport './App.css';\nimport CodeWidget from './Codewidget.js'\nimport LocustSummaryTable from './Content.js'\nimport SplitPane, { Pane } from 'react-split-pane';\nimport './resizer.css'\n\n\nfunction PullHeader(props)\n{\n  return (\n    <div className=\"SummaryTable\">\n      <Table striped bordered hover>\n      <tbody>\n        <tr>\n          <td>Initial</td>\n          <td>{props.initial}</td>\n        </tr>\n        <tr>\n          <td>Terminal</td>\n          <td>{props.terminal}</td>\n        </tr>\n        <tr>\n          <td>Total changed lines</td>\n          <td>{props.lines_changed}</td>\n        </tr>\n        <tr>\n          <td>Files changed</td>\n          <td>{props.files_changed}</td>\n        </tr>\n      </tbody>\n\n    </Table>\n\n  </div>\n  )\n}\n\nclass App extends React.Component {\n\n  constructor(props)\n  {\n    super(props)\n    this.state = {\n      Changes: [],\n      RowsSelected: [],\n      RowxSelected: []\n    }\n    this.SetSelectedRows = this.SetSelectedRows.bind(this)\n    this.renderControls = this.renderControls.bind(this)\n    this.renderCodeWindow = this.renderCodeWindow.bind(this)\n    this.removeSelection = this.removeSelection.bind(this)\n\n\n    data.locust.map((entry, idx) => {\n      let file = entry.file\n      entry.changes.map((change,idx) => {\n          this.getchange({change,file})\n      })\n\n    })\n\n  }\n\n  getchange(props)\n  {\n\n      let file = props.file\n          if(props.change.children.length>0)\n          {\n              props.change.children.map((change,idx) => {\n                  this.getchange({change,file})\n              })\n          }\n\n      let ratio = parseInt(props.change.changed_lines) / parseInt(props.change.total_lines)\n      let obj = {File: props.file, ...props.change, Ratio: ratio.toFixed(2)}\n      this.state.Changes.push(obj);\n  }\n\n\n  removeSelection(index) {\n    console.log('removeselection...',index)\n\n    let idx_to_remove\n    this.state.RowsSelected.map((ActiveRow,idx) => {\n      if (ActiveRow.dataIndex==index)\n      {\n        idx_to_remove = idx\n      }\n    })\n\n    const RowsSelected = this.state.RowsSelected;\n\n    RowsSelected.splice(idx_to_remove, 1);\n    this.setState({ RowsSelected:RowsSelected });\n\n  }\n\n\n  //Callback from table row selection change\n  SetSelectedRows(props)\n  {\n    console.log(\"App.GetSelectedRows...\")\n    {\n      this.setState({\n\n        RowsSelected: props.RowsSelected\n      })\n    }\n\n  }\n\n  renderControls(props)\n  {\n    console.log('renderControls')\n\n    let RowsSelectedIdxs = ['0']\n    this.state.RowsSelected.map((RowSelected,idx) => {\n      RowsSelectedIdxs.push(RowSelected.dataIndex)\n    })\n    console.log('RowsSelectedIdxs:',RowsSelectedIdxs)\n    return (\n      <div className=\"Controls\">\n        <Card>\n          <Card.Header>\n            <PullHeader files_changed={data.locust.length}\n                              initial={data.refs.initial}\n                              terminal={data.refs.terminal}\n                              lines_changed='ToDo'/>\n          </Card.Header>\n\n\n             <LocustSummaryTable  Changes={this.state.Changes}\n              SelectionChangesCallback={this.SetSelectedRows}\n              RowsSelected={this.state.RowsSelected}\n              RowsSelectedIdxs={this.state.RowsSelectedIdxs}\n              />\n\n        </Card>\n\n      </div>\n    )\n  }\n\n\n  renderCodeWindow(props)\n  {\n    console.log('App.renderCodeWindow...')\n\n    let x = ''\n    x = this.state.RowsSelected.map((RowSelected, idx) => {\n    {\n      return (\n        <Card key={RowSelected.dataIndex} > <Card.Header>\n            {this.state.Changes[RowSelected.dataIndex].name}\n            {' @ '}\n            {this.state.Changes[RowSelected.dataIndex].File}\n            {'   '}\n            <Button onClick={() => this.removeSelection({idx})} size=\"sm\" color=\"black\">X</Button>\n        <CodeWidget key={RowSelected.dataIndex}\n        Change={this.state.Changes[RowSelected.dataIndex]} show={true} id={idx}/>\n        </Card.Header>\n        </Card>)\n    }\n\n    })\n\n    if(x!='')\n    {\n      return (\n        <div className=\"Code\">\n           {x}\n        </div>\n      )\n    }\n    else\n    {\n      return (\n        <div className=\"Code\">\n          &lt;-- Drag this line to resize\n          <br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/>\n          &lt;-- Select rows at overview section to see code here <br/>\n        </div>\n      )\n\n    }\n\n\n  }\n  render() {\n\n\n    console.log(\".................App.Render()......................\")\n  return (\n    <div id=\"App\" className=\"#App\">\n\n  <SplitPane split=\"vertical\" minSize={\"50vw\"}>\n          <Pane className='Pane' initialSize=\"500px\"> <this.renderControls/></Pane>\n          <Pane className='Pane' initialSize=\"500px\"> <this.renderCodeWindow/></Pane>\n\n    </SplitPane>\n\n\n\n\n   </div>\n\n   );\n  }\n} export default App\n\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Example from './example.js'\n\n// ReactDOM.render(\n//   // <React.StrictMode>\n//     <App />,\n//   // </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n\n\n// import MUIDataTable from \"mui-datatables\";\n// import { TableCell, TableRow } from \"@material-ui/core\";\n\n\n// class App1 extends React.Component {\n//   render() {\n//     const columns = [\"Name\", \"Title\", \"Location\", \"Age\", \"Salary\"];\n\n//     const data = [\n//       [\"Gabby George\", \"Business Analyst\", \"Minneapolis\", 30, \"$100,000\"],\n//       [\"Aiden Lloyd\", \"Business Consultant\", \"Dallas\", 55, \"$200,000\"],\n//       [\"Jaden Collins\", \"Attorney\", \"Santa Ana\", 27, \"$500,000\"],\n//       [\"Franky Rees\", \"Business Analyst\", \"St. Petersburg\", 22, \"$50,000\"],\n//       [\"Aaren Rose\", \"Business Consultant\", \"Toledo\", 28, \"$75,000\"],\n//       [\n//         \"Blake Duncan\",\n//         \"Business Management Analyst\",\n//         \"San Diego\",\n//         65,\n//         \"$94,000\"\n//       ],\n//       [\"Frankie Parry\", \"Agency Legal Counsel\", \"Jacksonville\", 71, \"$210,000\"],\n//       [\"Lane Wilson\", \"Commercial Specialist\", \"Omaha\", 19, \"$65,000\"],\n//       [\"Robin Duncan\", \"Business Analyst\", \"Los Angeles\", 20, \"$77,000\"],\n//       [\"Mel Brooks\", \"Business Consultant\", \"Oklahoma City\", 37, \"$135,000\"],\n//       [\"Harper White\", \"Attorney\", \"Pittsburgh\", 52, \"$420,000\"],\n//       [\"Kris Humphrey\", \"Agency Legal Counsel\", \"Laredo\", 30, \"$150,000\"],\n//       [\"Frankie Long\", \"Industrial Analyst\", \"Austin\", 31, \"$170,000\"],\n//       [\"Brynn Robbins\", \"Business Analyst\", \"Norfolk\", 22, \"$90,000\"],\n//       [\"Justice Mann\", \"Business Consultant\", \"Chicago\", 24, \"$133,000\"],\n//       [\n//         \"Addison Navarro\",\n//         \"Business Management Analyst\",\n//         \"New York\",\n//         50,\n//         \"$295,000\"\n//       ],\n//       [\"Jesse Welch\", \"Agency Legal Counsel\", \"Seattle\", 28, \"$200,000\"],\n//       [\"Eli Mejia\", \"Commercial Specialist\", \"Long Beach\", 65, \"$400,000\"],\n//       [\"Gene Leblanc\", \"Industrial Analyst\", \"Hartford\", 34, \"$110,000\"],\n//       [\"Danny Leon\", \"Computer Scientist\", \"Newark\", 60, \"$220,000\"],\n//       [\"Lane Lee\", \"Corporate Counselor\", \"Cincinnati\", 52, \"$180,000\"],\n//       [\"Jesse Hall\", \"Business Analyst\", \"Baltimore\", 44, \"$99,000\"],\n//       [\"Danni Hudson\", \"Agency Legal Counsel\", \"Tampa\", 37, \"$90,000\"],\n//       [\"Terry Macdonald\", \"Commercial Specialist\", \"Miami\", 39, \"$140,000\"],\n//       [\"Justice Mccarthy\", \"Attorney\", \"Tucson\", 26, \"$330,000\"],\n//       [\"Silver Carey\", \"Computer Scientist\", \"Memphis\", 47, \"$250,000\"],\n//       [\"Franky Miles\", \"Industrial Analyst\", \"Buffalo\", 49, \"$190,000\"],\n//       [\"Glen Nixon\", \"Corporate Counselor\", \"Arlington\", 44, \"$80,000\"],\n//       [\n//         \"Gabby Strickland\",\n//         \"Business Process Consultant\",\n//         \"Scottsdale\",\n//         26,\n//         \"$45,000\"\n//       ],\n//       [\"Mason Ray\", \"Computer Scientist\", \"San Francisco\", 39, \"$142,000\"]\n//     ];\n\n//     const options = {\n//       filterType: \"dropdown\",\n//       responsive: \"scroll\",\n//       selectableRows: \"yes\",\n//       expandableRows: true,\n//       expandableRowsOnClick: true,\n//       renderExpandableRow: () => (\n//         <TableRow>\n//            <TableRow>\n//         </TableRow>\n//         </TableRow>\n//       )\n//     };\n\n//     return (\n//       <MUIDataTable\n//         title={\"ACME Employee list\"}\n//         data={data}\n//         columns={columns}\n//         options={options}\n//       />\n//     );\n//   }\n// }\n\n\n\nReactDOM.render(\n  // <React.StrictMode>\n  \n    <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}