{"version":3,"sources":["Content.js","Codewidget.js","App.js","index.js"],"names":["columns","name","label","options","filter","sort","filterType","LocustSummaryTable","React","Component","props","state","changes","CurrentRow","RowsSelected","data","map","entry","idx","file","change","getchange","children","length","ratio","parseInt","changed_lines","total_lines","obj","File","Ratio","toFixed","this","push","arr","allRowsSelected","RowSelected","index","setState","currentRowsSelected","ChangeList","SelectionChanges","tableOptions","selectableRowsOnClick","selectableRowsHideCheckboxes","rowsPerPage","rowsPerPageOptions","fixedHeader","xAxis","yAxis","selectToolbarPlacement","rowHover","setTableProps","padding","size","onRowSelectionChange","SelectionChangedCallback","className","title","CodeWidget","console","log","Change","Visible","show","key","id","close","bind","src","src_x","link","slice","indexOf","endline","line","postscribe","Card","Header","Button","onClick","color","PullHeader","Table","striped","bordered","hover","initial","terminal","lines_changed","files_changed","App","EntriesToDisplay","Changes","GetSelectedRows","renderControls","renderCodeWindow","locust","refs","x","includes","split","minSize","initialSize","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.070e4f84.chunk.js","sourcesContent":["import React from 'react'\nimport MUIDataTable, { TableFilterList } from \"mui-datatables\";\n\n// const handleRowClick = (rowData, rowMeta) => {\n//     console.log(rowData, rowMeta);\n// };\n\nconst columns = [\n    {\n        name: \"name\",\n        label: \"Name\",\n        options:\n        {\n         filter: true,\n         sort: true,\n         filterType: 'multiselect'\n        }\n    },\n    {\n        name: \"File\",\n        label: \"File\",\n        options:\n        {\n         filter: true,\n         sort: true,\n         filterType: 'multiselect'\n        }\n    },\n    {\n        name: \"type\",\n        label: \"type\",\n        options:\n        {\n         filter: true,\n         sort: true,\n         filterType: 'checkbox'\n        }\n    },\n    {\n        name: \"line\",\n        label: \"#\",\n        options:\n        {\n         filter: false,\n         sort: true,\n        }\n    },\n    {\n        name: \"changed_lines\",\n        label: \"changed\",\n        options:\n        {\n         filter: true,\n         sort: true,\n        }\n    },\n    {\n        name: \"total_lines\",\n        label: \"total\",\n        options:\n        {\n         filter: false,\n         sort: true,\n        }\n    },\n    {\n        name: \"Ratio\",\n        label: \"Ratio\",\n        options:\n        {\n         filter: false,\n         sort: true,\n        }\n    }\n\n    ];\n\n\nconst options = {\n//   filterType: 'checkbox',\n  setTableProps: () => {\n    return {\n      padding: 'none',\n      size: 'small',\n      selectToolbarPlacement: 'none'\n\n    };\n  },\n};\n\nclass DataEntry extends React.Component {\n    constructor(props)\n    {\n        super(props)\n        this.state=\n        {\n            FileName: props.FileName,\n            Type: props.Type,\n            LinesTotal: props.LinesTotal\n        }\n    }\n}\nclass LocustSummaryTable extends React.Component\n{\n    constructor(props)\n    {\n    super(props)\n\n    this.state =\n    {\n        changes: [],\n        CurrentRow: '',\n        RowsSelected: []\n\n    }\n    // console.log(props.data)\n    props.data.map((entry, idx) => {\n        let file = entry.file\n        entry.changes.map((change,idx) => {\n            this.getchange({change,file})\n        })\n\n      })\n\n    }\n\n    getchange(props)\n    {\n\n        let file = props.file\n            if(props.change.children.length>0)\n            {\n                props.change.children.map((change,idx) => {\n                    this.getchange({change,file})\n                })\n            }\n\n        let ratio = parseInt(props.change.changed_lines) / parseInt(props.change.total_lines)\n        let obj = {File: props.file, ...props.change, Ratio: ratio.toFixed(2)}\n        // obj = {obj, ...props.change}\n        this.state.changes.push(obj);\n    }\n\n    componentDidMount()\n    {\n\n    }\n\n    getfilechanges(props)\n    {\n        // return({ props.entry.file })\n    }\n\n    // getrows(props)\n    // {\n\n    //   var files =  this.state.data.map((entry, idx) => {\n    //     let x = [(entry.file)]\n    //     console.log(x)\n    //             return (\n    //                 {x}\n\n    //             // <this.getfilechanges key={idx} entry={entry}/>\n    //           )})\n\n    // }\n\n    SelectionChangedCallback(props)\n    {\n\n\n        let arr = []\n        if ( props.allRowsSelected.length > 0)\n        {\n            props.allRowsSelected.map((RowSelected, idx) => {\n                arr.push(RowSelected.index)\n            })\n        }\n        else\n        {\n\n            arr = []\n        }\n\n        this.setState(\n            {\n                CurrentRow: props.currentRowsSelected,\n                RowsSelected: arr\n            })\n        // console.log('SelectionChangedCallback:',arr)\n        if(arr)\n        {\n\n        }\n\n        let ChangeList = this.state.changes\n        this.props.SelectionChanges({arr,ChangeList})\n\n    }\n\n\n    render()\n    {\n\n        const tableOptions = {\n\n\n            selectableRowsOnClick: true,\n            selectableRowsHideCheckboxes: true,\n            // denseTable: true,\n            rowsPerPage: 50,\n            rowsPerPageOptions: [50, 500, 1000],\n            fixedHeader: {\n              xAxis: true,\n              yAxis: true\n            },\n            selectToolbarPlacement:\"none\",\n            rowHover : true,\n            setTableProps: () => (\n                {\n                padding: 'none',\n                  size:'small'\n                }\n              ),\n            onRowSelectionChange:(currentRowsSelected, allRowsSelected) => {\n                    this.SelectionChangedCallback({currentRowsSelected,allRowsSelected})\n                }\n        }\n        return (\n            <div className=\"SummaryTable\">\n               <MUIDataTable\n                    title={\"Changes\"}\n                    data={this.state.changes}\n                    columns={columns}\n                    options={tableOptions}\n\n                    // size='small'\n                />\n            </div>\n        )\n    }\n\n} export default LocustSummaryTable","import React from 'react'\nimport postscribe from 'postscribe';\nimport './App.css';\nimport Button from 'react-bootstrap/Button'\nimport Card from 'react-bootstrap/Card'\nclass CodeWidget extends React.Component\n{\n\n  constructor(props)\n  {\n    super(props)\n    console.log('CodeWidget constructor...')\n\n    this.state =\n    {\n      Change: props.Change,\n      Visible: props.show,\n      key: props.id\n    }\n\n    this.close = this.close.bind(this)\n\n  }\n\n  SetWindows(props)\n  {\n\n      console.log('CodeWidget.SetWindows..')\n  }\n  componentDidMount()\n  {\n    console.log('CodeWidget.ComponentDidMount()...')\n    if(this.state.Visible)\n        {\n            // http://gist-it.appspot.com/github/ADI10HERO/Hub/blob/6b69eb6/hub/collections/dataset/core.py?slice=559:565;footer=no\n            let src='http://gist-it.appspot.com/'\n            let src_x = this.state.Change.link.slice(0,this.state.Change.link.indexOf('#'))\n            let endline = parseInt(this.state.Change.total_lines) + parseInt(this.state.Change.line)\n            let startline = parseInt(this.state.Change.line)-1\n            let slice = '?slice='+startline+':'+(endline)\n            let nofoter = 'footer=no'\n            src = '<script src='+src+src_x+slice+';'+nofoter+'></script>'\n            // console.log(src)\n            console.log('key:',this.state.key)\n            let id=\"#Code\"+this.state.key\n            postscribe(id,src)\n        }\n    }\n\n    close()\n    {\n        this.setState({Visible:false})\n        console.log(\"CodeWidget.close\")\n        // this.componentWillUnmount\n    }\n\n  render() {\n\n    let id = ''\n        id=\"Code\"+this.state.key\n\n    if(this.state.Visible)\n    {\n        return (\n            <div className=\"CodeWidget\">\n                <Card> <Card.Header>\n                    {this.state.Change.name}\n                    {' @ '}\n                    {this.state.Change.File}\n                    {'   '}\n                    <Button onClick={this.close} size=\"sm\" color=\"black\">X</Button>\n\n\n                {/* <button onClick={console.log('clicked'), this.close}>Close</button> */}\n                <div id={id}></div>\n                </Card.Header>\n                </Card>\n            </div>\n\n            )\n    }\n    else\n    return('')\n\n  }\n} export default CodeWidget","import data from './locust.json'\nimport './Content.js'\n\nimport React from 'react'\nimport Accordion from 'react-bootstrap/Accordion'\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\nimport Table from 'react-bootstrap/Table'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Badge from 'react-bootstrap/Badge'\nimport './App.css';\nimport CodeWidget from './Codewidget.js'\nimport LocustSummaryTable from './Content.js'\nimport SplitPane, { Pane } from 'react-split-pane';\nimport './resizer.css'\n\n\n\n\nfunction Change(props)\n{\n  var Childrens\n  var AccCollapse\n    if (props.change.children.length > 0)\n    {\n      Childrens = () => (\n        <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n        Children: {props.change.children.length} {' '}\n        </Accordion.Toggle>\n      )\n      AccCollapse = () => (\n        <Accordion.Collapse eventKey=\"0\">\n          <Card.Body>\n            {\n              props.change.children.map((children, idx) => {\n                return (\n                    <Change key={idx} change={children}/>\n                )})\n            }\n          </Card.Body>\n        </Accordion.Collapse>\n      )\n    }\n    else\n    {\n      Childrens = () => \"Children: None\"\n      AccCollapse = () => \"\"\n    }\n\n\n\n\n  return (\n    <div className=\"Change\">\n      {/* <Accordion>\n<Card>\n  <Card.Header>\n       <Badge variant=\"primary\">{props.change.type}</Badge> {\" \"}\n       <Badge variant=\"secondary\">{props.change.name}</Badge>{\" \"}\n       <Badge variant=\"info\">#{props.change.line} {\" \"}</Badge>{\" \"}\n       <Button href={props.change.link} size=\"sm\" color=\"black\">Show</Button> <br/>\n      Changed Lines: {props.change.changed_lines} {\" \"}\n      Total Lines: {props.change.total_lines} <br/>\n      <Childrens/>\n  </Card.Header>\n      <AccCollapse/>\n      </Card>\n\n\n    </Accordion> */}\n\n\n    </div>\n  )\n}\n\nfunction LocustEntry(props)\n{\n    return (\n      <div className=\"File\">\n\n          File: {' '} {props.entry.file} {' '}\n          <Button href={props.entry.file_url} size=\"sm\">Open File</Button> <br/>\n          {' '}\n\n\n        {props.entry.changes.map((change, idx) => {\n          return (\n              <Change key={idx} change={change}/>\n          )})}\n      </div>\n    )\n}\n\nfunction PullHeader(props)\n{\n  return (\n    <div className=\"SummaryTable\">\n      <Table striped bordered hover>\n      <tbody>\n        <tr>\n          <td>Initial</td>\n          <td>{props.initial}</td>\n        </tr>\n        <tr>\n          <td>Terminal</td>\n          <td>{props.terminal}</td>\n        </tr>\n        <tr>\n          <td>Total changed lines</td>\n          <td>{props.lines_changed}</td>\n        </tr>\n        <tr>\n          <td>Files changed</td>\n          <td>{props.files_changed}</td>\n        </tr>\n      </tbody>\n\n    </Table>\n\n  </div>\n  )\n}\n\nclass App extends React.Component {\n\n  constructor(props)\n  {\n    super(props)\n    this.state = {\n      EntriesToDisplay: [],\n      Changes: []\n    }\n    this.GetSelectedRows = this.GetSelectedRows.bind(this)\n    this.renderControls = this.renderControls.bind(this)\n    this.renderCodeWindow = this.renderCodeWindow.bind(this)\n  }\n\n\n\n  GetSelectedRows(props)\n  {\n    console.log(\"App.GetSelectedRows...\")\n    {\n      this.setState({\n        EntriesToDisplay:props.arr,\n        Changes:props.ChangeList\n      })\n    }\n\n  }\n\n  renderControls(props)\n  {\n    return (\n      <div className=\"Controls\">\n        <Card>\n          <Card.Header>\n            <PullHeader files_changed={data.locust.length}\n                              initial={data.refs.initial}\n                              terminal={data.refs.terminal}\n                              lines_changed='ToDo'/>\n          </Card.Header>\n\n\n            {/* {\n              data.locust.map((entry, idx) => {\n                return (\n                <LocustEntry key={idx} entry={entry}/>\n              )})\n            } */}\n             <LocustSummaryTable data={data.locust} SelectionChanges={this.GetSelectedRows}/>\n\n        </Card>\n\n      </div>\n    )\n  }\n\n  renderCodeWindow(props)\n  {\n    console.log('App.renderCodeWindow...')\n\n    let x = ''\n    x = this.state.Changes.map((Change, idx) => {\n    if(this.state.EntriesToDisplay.includes(idx))\n    {\n      console.log('true')\n      return ( <CodeWidget key={idx} Change={Change} show={true} id={idx}/>)\n    }\n    else\n    {\n      console.log('false')\n      return ( '')\n    }\n\n    })\n\n    return (\n      <div className=\"Code\">\n         {x}\n      </div>\n    )\n  }\n  render() {\n\n\n  return (\n    <div id=\"App\" className=\"#App\">\n{/* <SplitPane className=\"Split\" split=\"vertical\" minSize={\"50vw\"}>\n  <Pane >You can use a Pane component</Pane>\n  <div>or you can use a plain old div</div>\n  <Pane >\n    Using a Pane allows you to specify any constraints directly\n  </Pane> </SplitPane>\n </SplitPane>;*/}\n\n\n  <SplitPane split=\"vertical\" minSize={\"50vw\"}>\n          <Pane className='Pane' initialSize=\"500px\"> <this.renderControls/></Pane>\n          <Pane className='Pane' initialSize=\"500px\"> <this.renderCodeWindow/></Pane>\n\n    </SplitPane>\n\n\n\n\n   </div>\n\n   );\n  }\n} export default App\n\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Example from './example.js'\n\n// ReactDOM.render(\n//   // <React.StrictMode>\n//     <App />,\n//   // </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n\n\n// import MUIDataTable from \"mui-datatables\";\n// import { TableCell, TableRow } from \"@material-ui/core\";\n\n\n// class App1 extends React.Component {\n//   render() {\n//     const columns = [\"Name\", \"Title\", \"Location\", \"Age\", \"Salary\"];\n\n//     const data = [\n//       [\"Gabby George\", \"Business Analyst\", \"Minneapolis\", 30, \"$100,000\"],\n//       [\"Aiden Lloyd\", \"Business Consultant\", \"Dallas\", 55, \"$200,000\"],\n//       [\"Jaden Collins\", \"Attorney\", \"Santa Ana\", 27, \"$500,000\"],\n//       [\"Franky Rees\", \"Business Analyst\", \"St. Petersburg\", 22, \"$50,000\"],\n//       [\"Aaren Rose\", \"Business Consultant\", \"Toledo\", 28, \"$75,000\"],\n//       [\n//         \"Blake Duncan\",\n//         \"Business Management Analyst\",\n//         \"San Diego\",\n//         65,\n//         \"$94,000\"\n//       ],\n//       [\"Frankie Parry\", \"Agency Legal Counsel\", \"Jacksonville\", 71, \"$210,000\"],\n//       [\"Lane Wilson\", \"Commercial Specialist\", \"Omaha\", 19, \"$65,000\"],\n//       [\"Robin Duncan\", \"Business Analyst\", \"Los Angeles\", 20, \"$77,000\"],\n//       [\"Mel Brooks\", \"Business Consultant\", \"Oklahoma City\", 37, \"$135,000\"],\n//       [\"Harper White\", \"Attorney\", \"Pittsburgh\", 52, \"$420,000\"],\n//       [\"Kris Humphrey\", \"Agency Legal Counsel\", \"Laredo\", 30, \"$150,000\"],\n//       [\"Frankie Long\", \"Industrial Analyst\", \"Austin\", 31, \"$170,000\"],\n//       [\"Brynn Robbins\", \"Business Analyst\", \"Norfolk\", 22, \"$90,000\"],\n//       [\"Justice Mann\", \"Business Consultant\", \"Chicago\", 24, \"$133,000\"],\n//       [\n//         \"Addison Navarro\",\n//         \"Business Management Analyst\",\n//         \"New York\",\n//         50,\n//         \"$295,000\"\n//       ],\n//       [\"Jesse Welch\", \"Agency Legal Counsel\", \"Seattle\", 28, \"$200,000\"],\n//       [\"Eli Mejia\", \"Commercial Specialist\", \"Long Beach\", 65, \"$400,000\"],\n//       [\"Gene Leblanc\", \"Industrial Analyst\", \"Hartford\", 34, \"$110,000\"],\n//       [\"Danny Leon\", \"Computer Scientist\", \"Newark\", 60, \"$220,000\"],\n//       [\"Lane Lee\", \"Corporate Counselor\", \"Cincinnati\", 52, \"$180,000\"],\n//       [\"Jesse Hall\", \"Business Analyst\", \"Baltimore\", 44, \"$99,000\"],\n//       [\"Danni Hudson\", \"Agency Legal Counsel\", \"Tampa\", 37, \"$90,000\"],\n//       [\"Terry Macdonald\", \"Commercial Specialist\", \"Miami\", 39, \"$140,000\"],\n//       [\"Justice Mccarthy\", \"Attorney\", \"Tucson\", 26, \"$330,000\"],\n//       [\"Silver Carey\", \"Computer Scientist\", \"Memphis\", 47, \"$250,000\"],\n//       [\"Franky Miles\", \"Industrial Analyst\", \"Buffalo\", 49, \"$190,000\"],\n//       [\"Glen Nixon\", \"Corporate Counselor\", \"Arlington\", 44, \"$80,000\"],\n//       [\n//         \"Gabby Strickland\",\n//         \"Business Process Consultant\",\n//         \"Scottsdale\",\n//         26,\n//         \"$45,000\"\n//       ],\n//       [\"Mason Ray\", \"Computer Scientist\", \"San Francisco\", 39, \"$142,000\"]\n//     ];\n\n//     const options = {\n//       filterType: \"dropdown\",\n//       responsive: \"scroll\",\n//       selectableRows: \"yes\",\n//       expandableRows: true,\n//       expandableRowsOnClick: true,\n//       renderExpandableRow: () => (\n//         <TableRow>\n//            <TableRow>\n//         </TableRow>\n//         </TableRow>\n//       )\n//     };\n\n//     return (\n//       <MUIDataTable\n//         title={\"ACME Employee list\"}\n//         data={data}\n//         columns={columns}\n//         options={options}\n//       />\n//     );\n//   }\n// }\n\n\n\nReactDOM.render(\n  // <React.StrictMode>\n  \n    <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}